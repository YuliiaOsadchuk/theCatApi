{"version":3,"sources":["components/catCard/CatCard.js","components/header/Header.js","components/pagination/Pagination.js","components/CatsListPage/CatsListPage.js","App.js","reportWebVitals.js","index.js"],"names":["CatCard","breed","desc","image","wiki","className","src","alt","href","Header","Pagination","currentPage","onPageChange","pageCount","disabled","onClick","CatsListPage","useState","catsList","setCatsList","setCurrentPage","fetchCatsList","a","fetch","response","json","results","useEffect","map","cat","name","description","url","wikipedia_url","page","App","WebFont","load","google","families","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAsBeA,EAnBC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACrC,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKC,IAAKH,EAAOI,IAAI,UAEvB,sBAAKF,UAAU,wBAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBJ,IACxB,mBAAGI,UAAU,YAAYG,KAAMJ,EAA/B,kBAGA,qBAAKC,UAAU,qBAAf,SACE,sBAAMA,UAAU,YAAhB,SAA6BH,aCNxBO,G,MANA,kBACb,qBAAKJ,UAAU,SAAf,SACE,qBAAKA,UAAU,OAAf,2BCkCWK,G,MApCI,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,aAAkC,IAApBC,iBAAoB,MAAR,EAAQ,EACnE,OACE,sBAAKR,UAAU,aAAf,UACE,wBACEA,UAAU,MACVS,SAA0B,IAAhBH,EACVI,QAAS,kBAAMH,EAAa,IAH9B,mBAOA,wBACEP,UAAU,MACVS,SAA0B,IAAhBH,EACVI,QAAS,kBAAMH,EAAaD,EAAc,IAH5C,kBAOA,wBAAQN,UAAU,mBAAlB,SAAsCM,IACtC,wBACEN,UAAU,MACVS,SAAUH,IAAgBE,EAC1BE,QAAS,kBAAMH,EAAaD,EAAc,IAH5C,kBAOA,wBACEN,UAAU,MACVS,SAAUH,IAAgBE,EAC1BE,QAAS,kBAAMH,EAAaC,IAH9B,uBCmBSG,G,MAzCM,WAAO,IAAD,EACOC,mBAAS,IADhB,mBAClBC,EADkB,KACRC,EADQ,OAEaF,mBAAS,GAFtB,mBAElBN,EAFkB,KAELS,EAFK,KAInBC,EAAa,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,sDAAD,OAC4BZ,IAFpC,cACda,EADc,gBAIEA,EAASC,OAJX,OAIdC,EAJc,OAKpBP,EAAYO,GALQ,2CAAH,qDAYnB,OAJAC,qBAAU,WACRN,MACC,CAACV,IAGF,qCACE,cAAC,EAAD,IACA,sBAAKN,UAAU,iBAAf,UACGa,EAASU,KAAI,SAACC,GAAS,IAAD,EACrB,OACE,cAAC,EAAD,CACE5B,MAAO4B,EAAIC,KACX5B,KAAM2B,EAAIE,YACV5B,MAAK,UAAE0B,EAAI1B,aAAN,aAAE,EAAW6B,IAClB5B,KAAMyB,EAAII,mBAIhB,qBAAK5B,UAAU,2BAAf,SACE,cAAC,EAAD,CACEM,YAAaA,EACbC,aAAc,SAACsB,GAAD,OAAUd,EAAec,gBCvBpCC,EAZH,WASV,OARAR,qBAAU,WACRS,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,kBAGd,IAEI,cAAC,EAAD,KCDMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d660ca6e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CatCard.scss\";\n\nconst CatCard = ({ breed, desc, image, wiki }) => {\n  return (\n    <div className=\"cat-cards row mb\">\n      <div className=\"cat-img-container\">\n        <img src={image} alt=\"cat\"></img>\n      </div>\n      <div className=\"info-container column\">\n        <span className=\"text\">{breed}</span>\n        <a className=\"text-href\" href={wiki}>\n          wiki\n        </a>\n        <div className=\"cat-desc-container\">\n          <span className=\"desc-text\">{desc}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CatCard;\n","import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header = () => (\n  <div className=\"header\">\n    <div className=\"text\">TheCatApi</div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./Pagination.scss\";\n\nconst Pagination = ({ currentPage, onPageChange, pageCount = 3 }) => {\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"btn\"\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(1)}\n      >\n        First\n      </button>\n      <button\n        className=\"btn\"\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        Prev\n      </button>\n      <button className=\"btn current-page\">{currentPage}</button>\n      <button\n        className=\"btn\"\n        disabled={currentPage === pageCount}\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        Next\n      </button>\n      <button\n        className=\"btn\"\n        disabled={currentPage === pageCount}\n        onClick={() => onPageChange(pageCount)}\n      >\n        Last\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport CatCard from \"../catCard/CatCard\";\nimport Header from \"../header/Header\";\nimport Pagination from \"../pagination/Pagination\";\nimport \"./CatsListPage.scss\";\n\nconst CatsListPage = () => {\n  const [catsList, setCatsList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const fetchCatsList = async () => {\n    const response = await fetch(\n      `https://api.thecatapi.com/v1/breeds/?limit=10&page=${currentPage}`\n    );\n    const results = await response.json();\n    setCatsList(results);\n  };\n\n  useEffect(() => {\n    fetchCatsList();\n  }, [currentPage]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"cats-list-page\">\n        {catsList.map((cat) => {\n          return (\n            <CatCard\n              breed={cat.name}\n              desc={cat.description}\n              image={cat.image?.url}\n              wiki={cat.wikipedia_url}\n            />\n          );\n        })}\n        <div className=\"row pagination-container\">\n          <Pagination\n            currentPage={currentPage}\n            onPageChange={(page) => setCurrentPage(page)}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CatsListPage;\n","import React, { useEffect } from \"react\";\nimport WebFont from \"webfontloader\";\nimport CatsListPage from \"./components/CatsListPage/CatsListPage\";\n\nconst App = () => {\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: [\"Kiwi Maru\"],\n      },\n    });\n  }, []);\n\n  return <CatsListPage />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}